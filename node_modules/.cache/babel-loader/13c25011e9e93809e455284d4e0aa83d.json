{"ast":null,"code":"var _jsxFileName = \"/home/daniel/code/flindel_challenge/client/src/components/ReturnForm.js\";\nimport React, { useState } from 'react';\nimport styles from './ReturnForm.module.css';\n\nconst ReturnForm = ({\n  setRefund,\n  setReturnableProducts,\n  setNotification\n}) => {\n  const [id, setIdInput] = useState('');\n\n  const checkProductReturn = async event => {\n    event.preventDefault();\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    const body = JSON.stringify({\n      id\n    });\n    const res = await fetch('http://localhost:5000/api/transaction/return', {\n      headers,\n      body,\n      method: 'POST'\n    });\n    const response = await res.json();\n\n    if (response.error) {\n      setNotification(response.error);\n    } else {\n      setRefund(response.refund);\n      setReturnableProducts(response.products);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: checkProductReturn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Product Returns\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    \"aria-label\": \"transaction id\",\n    placeholder: \"Enter transaction id\",\n    value: id,\n    onChange: event => setIdInput(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Submit\"));\n};\n\nexport default ReturnForm;","map":{"version":3,"sources":["/home/daniel/code/flindel_challenge/client/src/components/ReturnForm.js"],"names":["React","useState","styles","ReturnForm","setRefund","setReturnableProducts","setNotification","id","setIdInput","checkProductReturn","event","preventDefault","headers","body","JSON","stringify","res","fetch","method","response","json","error","refund","products","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA,qBAAZ;AAAmCC,EAAAA;AAAnC,CAAD,KAAyD;AAC1E,QAAM,CAACC,EAAD,EAAKC,UAAL,IAAmBP,QAAQ,CAAC,EAAD,CAAjC;;AAEA,QAAMQ,kBAAkB,GAAG,MAAMC,KAAN,IAAe;AACxCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,OAAO,GAAG;AACd,sBAAgB;AADF,KAAhB;AAIA,UAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAACR,MAAAA;AAAD,KAAf,CAAb;AAEA,UAAMS,GAAG,GAAG,MAAMC,KAAK,CAAC,8CAAD,EAAiD;AACtEL,MAAAA,OADsE;AAEtEC,MAAAA,IAFsE;AAGtEK,MAAAA,MAAM,EAAE;AAH8D,KAAjD,CAAvB;AAMA,UAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,IAAJ,EAAvB;;AAEA,QAAID,QAAQ,CAACE,KAAb,EAAoB;AAClBf,MAAAA,eAAe,CAACa,QAAQ,CAACE,KAAV,CAAf;AACD,KAFD,MAEO;AACLjB,MAAAA,SAAS,CAACe,QAAQ,CAACG,MAAV,CAAT;AACAjB,MAAAA,qBAAqB,CAACc,QAAQ,CAACI,QAAV,CAArB;AACD;AACF,GAvBD;;AAyBA,sBACE;AAAM,IAAA,QAAQ,EAAEd,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,kBAAW,gBAFb;AAGE,IAAA,WAAW,EAAC,sBAHd;AAIE,IAAA,KAAK,EAAEF,EAJT;AAKE,IAAA,QAAQ,EAAEG,KAAK,IAAIF,UAAU,CAACE,KAAK,CAACc,MAAN,CAAaC,KAAd,CAL/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,CADF;AAYD,CAxCD;;AA0CA,eAAetB,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport styles from './ReturnForm.module.css';\n\nconst ReturnForm = ({setRefund, setReturnableProducts, setNotification}) => {\n  const [id, setIdInput] = useState('')\n\n  const checkProductReturn = async event => {\n    event.preventDefault()\n\n    const headers = {\n      'Content-Type': 'application/json'\n    }\n\n    const body = JSON.stringify({id})\n    \n    const res = await fetch('http://localhost:5000/api/transaction/return', {\n      headers,\n      body,\n      method: 'POST'\n    })\n\n    const response = await res.json()\n\n    if (response.error) {\n      setNotification(response.error)\n    } else {\n      setRefund(response.refund)\n      setReturnableProducts(response.products)\n    }\n  }\n\n  return (\n    <form onSubmit={checkProductReturn}>\n      <h1>Product Returns</h1>\n      <input \n        type=\"text\" \n        aria-label=\"transaction id\" \n        placeholder=\"Enter transaction id\"\n        value={id}\n        onChange={event => setIdInput(event.target.value)}/>\n        <button>Submit</button>\n    </form>\n  )\n}\n\nexport default ReturnForm"]},"metadata":{},"sourceType":"module"}